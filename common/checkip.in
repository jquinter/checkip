#!/bin/bash
# By graysky <graysky AT archlinux DOT us>

VERS="@VERSION@"
SKEL="/usr/share/checkip/checkip.conf.skel"
CONFIGDIR="$HOME/.config/checkip"
CONFIG="$CONFIGDIR/checkip.conf"
DB="$CONFIGDIR/checkip.db"

export BLD="\e[01m" RED="\e[01;31m" GRN="\e[01;32m" BLU="\e[01;34m" NRM="\e[00m"

command -v dig >/dev/null 2>&1 || {
echo -e ${RED}"I require dig but it's not installed. Aborting."${NRM} >&2
exit 1; }

command -v curl >/dev/null 2>&1 || {
echo -e ${RED}"I require curl but it's not installed. Aborting."${NRM} >&2
exit 1; }

makeconfig() {
	if [[ ! -f $SKEL ]]; then
		echo -e "${RED}$SKEL is missing. Reinstall this package to continue."${NRM}
		exit 1
	fi

	if [[ ! -f "$CONFIG" ]]; then
		echo -e ${BLD}'------------------------------------------------------------'${NRM}
		echo -e ${BLD}' No config file found so creating a fresh one in:'${NRM}
		echo -e ${BLD}${BLUE}" $CONFIG"${NRM}
		echo
		echo -e ${BLD}" Edit this file before invoking $0 again."${NRM}
		echo -e ${BLD}'------------------------------------------------------------'${NRM}
		[[ ! -d "$CONFIGDIR" ]] && mkdir -p "$CONFIGDIR"
		install -m600 "$SKEL" "$CONFIG"
		exit 0
	fi
}

checkconfig() {
	if [[ ! -f "$CONFIG" ]]; then
		makeconfig
		exit 0
	else
		. "$CONFIG"

		case "$MAILCLIENT" in
			mailx|MAILX|Mailx|MailX)
				command -v mailx >/dev/null 2>&1 || {
				echo -e ${RED}"I require mailx but it's not installed. Aborting."${NRM} >&2
				exit 1; }
				[[ ! -f ~/.mailrc ]] && echo -e ${RED}" No mailx config file detected (~/.mailrc)."${NRM} && exit 1
				export SCRIPTMAILCLIENT=mailx
				;;
			mailsend|MAILSEND|Mailsend|MailSend)
				command -v mailsend >/dev/null 2>&1 || {
				echo -e ${RED}"I require mailsend but it's not installed. Aborting."${NRM} >&2
				exit 1; }
				[[ -z "$TARGETEMAIL" ]] && echo -e ${RED}" Error in config! Define a target email address."${NRM} && exit 1
				[[ -z "$FROM" ]] && echo -e ${RED}" Error in config! Define a return address."${NRM} && exit 1
				[[ -z "$SMTP" ]] && echo -e ${RED}" Error in config! Define a STMP server."${NRM} && exit 1
				[[ -z "$USERNAME" ]] && echo -e ${RED}" Error in config! Define a username."${NRM} && exit 1
				[[ -z "$SMTP_USER_PASS" ]] && echo -e ${RED}" Error in config! Define a password."${NRM} && exit 1
				[[ -z "$AUTHMODE" ]] && echo -e ${RED}" Error in config! Define an authentication mode."${NRM} && exit 1
				export SCRIPTMAILCLIENT=mailsend
				;;
			*)
				echo -e ${RED}" Invalid setting for MAILCLIENT in $CONFIG detected!"${NRM}
				exit 1
				;;
		esac
	fi
}

sendmail() {
	if [[ -z "$TESTMODE"  ]]; then
		CURRENTIP=$(cat $DB)
	else
		# we are in test mode and the db may not yet exist
		CURRENTIP="TEST MODE ONLY"
	fi

	if [[ "$SCRIPTMAILCLIENT" = "mailsend" ]]; then
		# we are using mailsend not mailx
		OPTS="-to $TARGETEMAIL -from $FROM -auth -smtp $SMTP +cc +bc -user $USERNAME -pass $SMTP_USER_PASS"

		case "$AUTHMODE" in
			SSL)
				mailsend -ssl -port 465 $OPTS -sub "IP address" -M "IP is $CURRENTIP"
				;;
			STARTTLS)
				mailsend -starttls -port 587 $OPTS -sub "IP address" -M "IP is $CURRENTIP"
				;;
			NONE)
				echo 'TODO'
				;;
			*)
				exit 1
		esac
	elif [[ "$SCRIPTMAILCLIENT" = "mailx" ]]; then
		# we are using mailx
		echo "$CURRENTIP" | mailx -A "$MAILX_ACCOUNT_NAME" -s "IP Address" "$TARGETEMAIL"
	fi
}

run() {
	NOW=$(date "+%m-%d-%Y %H:%M:%S")

	if [[ ! -f "$DB" ]]; then
		echo -e ${BLD}" No old IP on record so getting it now and writting to database."${NRM}
		echo $(curl "$PROXY" -s http://www.whatsmyip.us/ | grep "</textarea>"| sed 's/[</].*$//') > "$DB"
		OLDIP=$(cat "$DB")
		exit 0
	else
		OLDIP=$(cat "$DB")
	fi

	# Get the IP address
	# Script tries initially from a DNS server using dig

	CURRENTIP=$(dig +short myip.opendns.com @resolver1.opendns.com)

	# If that fails, it defaults back to using websites
	# that provide the IP trying all three of these:
	# 1. http://www.whatsmyip.us
	# 2. http://icanhazip.com
	# 3. http://ifconfig.me
	if [[ -z "$CURRENTIP" ]]; then
		CURRENTIP=$(curl $PROXY -s http://www.whatsmyip.us/ | grep "</textarea>"| sed 's/[</].*$//')
	fi

	if [[ -z "$CURRENTIP" ]]; then
		CURRENTIP=$(curl $PROXY -s http://icanhazip.com/)
	fi

	if [[ -z "$CURRENTIP" ]]; then
		CURRENTIP=$(curl $PROXY -s http://ifconfig.me/)
	fi

	if [[ -z "$CURRENTIP" ]]; then
		# net up or down
		CHECK="WAN or websites are down, no action taken."
		echo -e ${RED}" Null value detected."${NRM}
		writelog
		exit 1
	fi 

	if [[ "$CURRENTIP" != "$OLDIP" ]]; then
		# IP changed
		CHECK="IP changed, sending mail and updating db."
		echo -e ${BLD}" Current IP differs from IP in database so notifying and updating database."${NRM}
		writelog
		echo "$CURRENTIP" > "$DB"
		sendmail
	else
		# no change
		CHECK="No change to IP detected, no action taken."
		echo -e ${BLD}" IP matches IP on record so taking no action."${NRM}
		writelog
	fi
}

writelog() {
	[[ ! -f "$LOG" ]] && echo -e "Date/Time \t\t Action" > "$LOG"
	echo -e "$NOW \t $CHECK" >> "$LOG"
}

greets() {
	echo -e "${RED}Checkip v$VERS${NRM}"
	echo
}

case "$1" in
	mail|m|M|Mail)
		checkconfig
		echo -e "${BLD} Trying to send test email to ${BLU}$TARGETEMAIL"${NRM}${BLD}
		export TESTMODE=1
		sendmail
		;;
	check|c|C|Check)
		checkconfig
		run
		;;
	*)
		greets
		checkconfig
		echo -e " ${BLD}$0 ${NRM}${GRN}[option]${NRM}"
		echo -e " ${BLD} ${NRM}${GRN}m${NRM}${BLD}	Send a test email and exit."${NRM}
		echo -e " ${BLD} ${NRM}${GRN}c${NRM}${BLD}	Check IP against IP on record and send mail if different."${NRM}
		;;
esac
exit 0

#vim:set ts=2 sw=2 et:
